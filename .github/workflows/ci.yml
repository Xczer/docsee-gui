name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - "*.md"
      - "docs/**"
      - ".gitignore"
      - "LICENSE"
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - "*.md"
      - "docs/**"
      - ".gitignore"
      - "LICENSE"

env:
  CARGO_TERM_COLOR: always
  NODE_ENV: ci

jobs:
  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check frontend code quality
        run: |
          echo "🔍 Running Biome code quality checks..."
          bunx biome check --error-on-warnings src/routes src/lib/stores src/lib/utils src/lib/types --no-errors-on-unmatched
          echo "✅ Frontend code quality passed"

  rust-quality:
    name: Rust Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src-tauri
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-rust-${{ hashFiles('src-tauri/Cargo.lock') }}

      - name: Check formatting
        run: |
          echo "🦀 Checking Rust code formatting..."
          cargo fmt --all -- --check
          echo "✅ Rust formatting passed"

      - name: Run clippy
        run: |
          echo "🦀 Running Rust linting..."
          cargo clippy --all-targets --all-features -- -D warnings
          echo "✅ Rust linting passed"

      - name: Run tests
        run: |
          echo "🧪 Running Rust tests..."
          cargo test --verbose
          echo "✅ Rust tests passed"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Node.js security audit
        run: |
          echo "🔒 Running Node.js security audit..."
          bun audit --audit-level moderate || echo "⚠️ Node.js audit completed with warnings"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-audit-${{ hashFiles('src-tauri/Cargo.lock') }}

      - name: Install cargo-audit
        run: |
          echo "🔒 Installing cargo-audit..."
          cargo install cargo-audit

      - name: Rust security audit
        run: |
          echo "🔒 Running Rust security audit..."
          cd src-tauri && cargo audit || echo "⚠️ Rust audit completed with warnings"

  build-test:
    name: Build Test (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    needs: [frontend-quality, rust-quality]
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - platform: macos-latest
            target: x86_64-apple-darwin
          - platform: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('bun.lock', 'src-tauri/Cargo.lock') }}

      # Linux-specific dependencies
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Build frontend
        run: |
          echo "🏗️ Building frontend..."
          bun run build
          echo "✅ Frontend build successful"

      - name: Test Tauri build
        run: |
          echo "🦀 Testing Tauri build..."
          cd src-tauri && cargo check --release
          echo "✅ Tauri build test passed"

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Build application
        run: |
          echo "🏗️ Building full application..."
          bun run build
          cd src-tauri && cargo build --release
          echo "✅ Full application build successful"

      - name: Basic smoke tests
        run: |
          echo "🧪 Running basic smoke tests..."
          # Add any integration tests here
          echo "✅ Smoke tests passed"
